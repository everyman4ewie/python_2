# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
# Пример готовой структуры:
#
# [
#
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
#
# {
#
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

# Не доделано, без понятия как это сделать, не получается сделать аналитику, получаю два словаря, но у них одинаковые имена, не понял как сделать это...
# 1 ввриант
quantity = int(input("Введите количество товаров в списке: "))
q = 1  # присваиваю цифру 1, чтобы счет начинался с 1 в списке и не пришлось спрашивать у пользователя нумерацию
product = []  # пустой список для товаров, которые добавит пользователь
products = []
analitic = {}  # добавляю пустой словарь
while q <= quantity:  # чтобы нумерация не превышала количество товаров в списке
    product = dict(
        {'Название': input("Введите название товара: "),
         'Цена': int(input("Введите цену товара: ")),
         'Количество': int(input('Введите количество товара: ')),
         'Еденицы измерения': input("Введите единицу измерения товара: ")})
    products.append((q, product))
    q += 1
print(products)
for a in range(quantity):
    number = products[a]
    number = number[1]
    a += 1
    print(number)

    # print(c)
    # for key, value in number.items():
    #     my_dict = {}
    #     my_dict = {key: (number[key]) for key in number}

    # print(my_dict)



# analitic = dict(
#         {'Название': product.get('Название'),
#          'Цена': product.get('Цена'),
#          'Количество': product.get('Количество'),
#          'Еденицы измерения': product.get('Еденицы измерения')})  # возвращаю значение ключа, которые есть с помощью get
# print(analitic)




# 2 вариант
# products = []  # добавляю пустой список
# while input('Вы хотите добавить нумерацию для товар? (да/нет) ') == 'да':  # не смог по-другому придумать как зациклить
#     # нумерацию товара, если есть другой вариант подскажите
#     number = int(input('Введите номер продукта: '))
#     my_dict = {}  # добавляю пустой словарь
#     q = 0
#     while input('Вы хотите добавить продукт? (да/нет) ') == 'да':  # по аналогии с нумерацией товара
#         product, price, quantity = input('Введите название продукта: '), int(input('Введите цену продукта: ')), int(input('Введите количество товара: '))  # по идее сюда можно запихнуть строчку my_dict[product], но программа выдает ошибку почему-то
#         # не значл, что можно так делать, выяснил экспериментально, чисто посмотреть что будет
#         my_dict[product] = str(price), str(quantity)  # если оставить формат int, то вылезает ошибка, поэтому перевожу в строку
#         q += 1
#         if q == 1:  # это нужно, чтобы только один товар вставал на одну нумерацию, если это убрать, то весь товар будет добавлен по один номер
#             break
#     products.append(tuple([number, my_dict])) #
# print(products)
#
# analitic = {}
# for el_1 in products:
#     for product, price in el_1[1].items():
#         if product in analitic:
#             analitic[product].append(price)
#         else:
#             analitic[product] = [price]
# for el_2 in products:
#     for product, price in el_2[2].items():
#         if product in analitic:
#             analitic[product].append(price)
#         else:
#             analitic[product] = [price]
# print(analitic)


# 3 вариант
# Первоначально хотел сделать так, но не получалось сделать прерывание в нужно месте с помощью break и продолжение с помощью continue,
# решил попробовать способом выше.
# доработаю программу попозже, но способ выше попроще выглядит

# products = []  # добавляю пустой список
# while True:
#     choice_1 = input('Вы хотите добавить нумерацию для товар? (да/нет)')  # не смог по-другому придумать как зациклить
#     # нумерацию товара, если есть другой вариант подскажите
#     if choice_1 == 'да':
#         number = int(input('Введите номер продукта: '))
#     else:
#         break
#     my_dict = dict()  # добавляю пустой словарь, но вроде как можно задать так {} без использования dict(),
#     # не понял как это повлияет на программу, поэтому сделал, как учили
#     while True:
#         choice_2 = input('Вы хотите добавить продукт? (да/нет)')# по аналогии с нумерацией товара
#         if choice_2 == 'да':
#             product = input('Введите название продукта: ')
#             price = int(input('Введите цену продукта: '))  # нужно цену товара взять в цифрах, поэтому пишу int
#         else:
#             break
#         my_dict[product] = str(price)  # если оставить формат int, то вылезает ошибка, поэтому перевожу в строку
#     products.append(tuple([number, my_dict])) #
# print(products)
